openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://localhost:8080/
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Pet:
      type: object
      discriminator:
        propertyName: legs
        mapping:
          two: Chicken
          four: Dog
        oneOf:
          - $ref: '#/components/schemas/Dog'
          - $ref: '#/components/schemas/Chicken'
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Chicken:
      type: object
      required:
        - legs
      properties:
        legs:
          type: string
    Dog:
      type: object
      required:
        - legs
      properties:
        legs:
          type: string
    Link:
      type: object
      properties:
        next:
          type: string
          description: Next link
          example: 'http://'
        previous:
          type: string
          description: Previous link
          example: 'http://'
    Sample:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
        _href:
          $ref: '#/components/schemas/Link'
    SampleA:
      type: object
      allOf:
        - $ref: '#/components/schemas/Sample'
    SampleB:
      type: object
      allOf:
        - $ref: '#/components/schemas/Sample'

    Foo:
      allOf:
        - $ref: "#/components/schemas/Bar"
      properties:
        ancestors:
          items:
            $ref: "#/components/schemas/Bar"
          type: array
        description:
          type: object
          additionalProperties:
            type: string
        id:
          description: id
          type: string
      type: object
    Bar:
      discriminator:
        propertyName: barType
        mapping:
          foo: "#/components/schemas/Foo"
      properties:
        accessAllowed:
          items:
            type: string
          type: array
        catalog:
          type: boolean
        children:
          items:
            $ref: "#/components/schemas/Bar"
          type: array

    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string